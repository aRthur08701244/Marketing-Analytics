###############  Data Explorations    ########################################################
## These are implementable but not necessarily the most efficient codes
## They are provided only for the course participants' reference
###############  Codes Adapted from http://r-marketing.r-forge.r-project.org/code/
##############################################################################################
rm(list=ls())
Store_A<-c(56,34,67,33,25,28)
Store_B<-c(78,67,56,44,56,89)
Store_C<-c(165, 171,167,167,166,181)
Stores<-data.frame(Store_A,Store_B,Store_C)
Stores
apply(Stores,1,sum)
apply(Stores,2,mean)
sapply(Stores, mean) # returns only vector as output.
sapply(Stores,class)
random <- c("This","is","random","vector")
sapply(random,nchar)
apply(Stores,1,sum)
apply(Stores,2,mean)
View(Stores)
###############  Data Explorations    ########################################################
## These are implementable but not necessarily the most efficient codes
## They are provided only for the course participants' reference
###############  Codes Adapted from http://r-marketing.r-forge.r-project.org/code/
##############################################################################################
rm(list=ls())
Store_A<-c(56,34,67,33,25,28)
Store_B<-c(78,67,56,44,56,89)
Store_C<-c(165, 171,167,167,166,181)
Stores<-data.frame(Store_A,Store_B,Store_C)
Stores
apply(Stores,1,sum)
apply(Stores,2,mean)
sapply(Stores, mean) # returns only vector as output.
sapply(Stores,class)
random <- c("This","is","random","vector")
sapply(random,nchar)
library(plyr)
ddply(d, "year", summarise, mean.count = mean(count))                           # Summarize by plyr, creates a new (usually) condensed data frame, can be slow when the data set is large
####  Exploring Data Sets,  Step by step  ############################################################
####  Codes and Data Sets Adapted from
####  http://r-marketing.r-forge.r-project.org/code/chapter3-ChapmanFeit.R & http://r-marketing.r-forge.r-project.org/code/chapter5-ChapmanFeit.R
####  First, summary statistics
rm(list=ls())
setwd('C:/R1')
####  Exploring Data Sets,  Step by step  ############################################################
####  Codes and Data Sets Adapted from
####  http://r-marketing.r-forge.r-project.org/code/chapter3-ChapmanFeit.R & http://r-marketing.r-forge.r-project.org/code/chapter5-ChapmanFeit.R
####  First, summary statistics
rm(list=ls())
setwd('./data')
store.df <-read.csv('storedf.csv')		# Total sales by week for two products at a chain of stores. Sales for the two products in 20 stores over two years, with price and promotion status.
dim(store.df)
head(store.df)
summary(store.df)
sapply(store.df,class)
store.df$storeNum<-as.factor(store.df$storeNum)
root.dir("./data")
```{r}
library(knitr)
root.dir("./data")
library(car)
some(store.df)							# random selection
library(psych)   				# must install first
describe(store.df)              # Describe (psych package)
apply(store.df[,2:9], MARGIN=2, FUN=mean)
apply(store.df[,2:9], 2, sd)
apply(store.df[,2:9], 2, function(x) { mean(x) - median(x) } )       # anonymous function
table(store.df$p1price)
prop.table(table(store.df$p1price))
table(store.df$p1price, store.df$p1prom)
some(store.df)
describe(store.df)
min(store.df$p1sales)
max(store.df$p2sales)
mean(store.df$p1prom)
median(store.df$p2sales)
var(store.df$p1sales)
sd(store.df$p1sales)
quantile(store.df$p1sales)   # default = 0:4*0.25
quantile(store.df$p1sales, probs=c(0.25, 0.75)) # Interquartile
IQR(store.df$p1sales)							# Interquartile range
quantile(store.df$p1sales, probs=c(0.025, 0.975)) # central 95%
quantile(store.df$p1sales, probs=1:10/10)  # shortcut
mysummary2.df <- data.frame(matrix(NA, nrow=2, ncol=2))
names(mysummary2.df) <- c("Median Sales", "IQR")
rownames(mysummary2.df) <- names(store.df)[4:5] # names from the data frame
mysummary2.df[, "Median Sales"] <- apply(store.df[, 4:5], 2, median)
mysummary2.df[, "IQR"] <- apply(store.df[, 4:5], 2, IQR)
mysummary2.df
summary(store.df)
summary(store.df$p1sales)
summary(store.df$p1sales, digits=2)  # round output
by(store.df$p1sales, store.df$storeNum, mean)       # by()
storeMean <- aggregate(store.df$p1sales, by=list(store=store.df$storeNum), mean)  # aggregate()
storeMean
p1sales.sum <- aggregate(store.df$p1sales, by=list(country=store.df$country), sum)     # Aggregate sales by country
p1sales.sum
cust.df<-read.csv('custdf.csv')
setwd("~/Desktop/行銷數據分析/data")
setwd(./data)
setwd("./data")
cust.df<-read.csv('custdf.csv')
dim(cust.df)
head(cust.df)
str(cust.df)
sapply(cust.df, class)        # A sanity check. If something goes wrong, you'll have to specify "colClasses=... " in the read.csv step
summary(cust.df)
library(psych)
describe(cust.df)
describeBy(cust.df, cust.df$email)
### Try to get more from another data set #############
setwd("./data")
seg.df <- read.csv("segdf.csv")
dim(seg.df)
head(seg.df)
sapply(seg.df,class)
summary(seg.df)
mean(seg.df$income[seg.df$Segment == "Moving up" &  seg.df$subscribe=="subNo"])
by(seg.df$income, seg.df$Segment, mean)
by(seg.df$income, list(seg.df$Segment, seg.df$subscribe), mean)
aggregate(seg.df$income, list(seg.df$Segment), mean)
seg.income.mean <- aggregate(seg.df$income, list(seg.df$Segment), mean)
seg.df$segIncome <- seg.income.mean[seg.df$Segment, 2]
